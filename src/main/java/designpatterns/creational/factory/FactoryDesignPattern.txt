Factory design pattern is used when we have a super class with multiple sub-classes and
based on input, we need to return one of the sub-classes. This pattern takes out the
responsibility of instantiation of a class from client program to the factory class. We can
apply Singleton pattern on Factory class or make the factory method static.
Super class in factory pattern can be an interface or a normal java class.

Benefits:
* Factory pattern provides approach to code for interface rather than implementation.
* Factory pattern removes the instantiation of actual implementation classes from client
code, making it more robust, less coupled and easy to extend. For example, we can easily
change PC class implementation because client program is unaware of this.
* Factory pattern provides abstraction between implementation and client classes through
inheritance .
